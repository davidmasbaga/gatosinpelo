---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";


type PostType = {
  slug: string; // Asumiendo que cada post tiene un 'slug'
  commonTagsCount?: number; // Esta propiedad es opcional y la a침ades t칰 mismo
  data: {
    title: string;
    pubDate: Date;
    description: string;
    image: {
      url: string;
      alt: string;
    };
    category: string;
    tags: string[];
    related?: string[]; // Hacerlo opcional porque es opcional en tu esquema
  };
};

// Aseg칰rate de que relatedPosts sea un arreglo de PostType
let relatedPosts: PostType[] = [];
let slugsUsed = new Set([Astro.props.currentPost.slug]); // Registrar el slug del post actual

// Funci칩n para contar etiquetas en com칰n
function countCommonTags(postTags: string[], currentTags: string[]): number {
  // Aseg칰rate de que ambos son arreglos
  if (!Array.isArray(postTags) || !Array.isArray(currentTags)) {
    return 0;
  }
  return postTags.reduce((count, tag) => currentTags.includes(tag) ? count + 1 : count, 0);
}

// Obtener todos los posts
const allPosts = await getCollection("posts");
const currentPostTags = Astro.props.currentPost.data.tags || [];

// L칩gica para llenar relatedPosts sin duplicados
for (let minTagsInCommon = 3; minTagsInCommon > 0 && relatedPosts.length < 4; minTagsInCommon--) {
  // Filtrar posts por cantidad de etiquetas en com칰n y que no est칠n ya usados
  const postsWithMinTags = allPosts
    .filter(post => post.data.tags && post.data.tags.length > 0) // Asegurarse de que el post tiene etiquetas
    .map(post => ({
      ...post,
      commonTagsCount: countCommonTags(post.data.tags, currentPostTags)
    }))
    .filter(post => post.commonTagsCount >= minTagsInCommon && !slugsUsed.has(post.slug)) // Excluir posts ya a침adidos
    .sort((a, b) => b.commonTagsCount - a.commonTagsCount);

  // A침adir posts a relatedPosts si a칰n hay espacio
  for (const post of postsWithMinTags) {
    if (relatedPosts.length < 4) {
      relatedPosts.push(post);
      slugsUsed.add(post.slug); // Registrar el slug del post a침adido
    }
  }
}


---


<aside
  aria-label="Related articles"
  class="py-8 lg:py-16 bg-gray-50"
>
  <div class="px-4 mx-auto max-w-screen-2xl">
    <p class="mb-8 text-2xl text-center font-bold text-gray-900 dark:text-white">
      Art칤culos relacionados
    </p>
    <div class="flex flex-col md:flex-row sm:justify-between gap-8">
      {
        relatedPosts.length > 0 ? (
          relatedPosts.map((post) => {
            return (
              <div class='flex flex-wrap gap-2'>
                <div class='min-h-full'>
                  <Image
                    src={post.data.image.url}
                    width={200}
                    height={200}
                    format='webp'
                    class='w-16 h-16 object-cover rounded-full  '
                    alt={`img of ${post.data.title}`}
                  />
                </div>
                <p class='flex justify-center items-center text-xs'>
                  <a class='font-medium  hover:underline' href={`/blog/${post.slug}`}>
                    {post.data.title}
                  </a>
                </p>
              </div>
            )
          })
        ) : (
          <span class='text-gray-500'>No hemos encontrado art칤culos relacionados. 游땩</span>
        )
      }
    </div>
  </div>
</aside>


